services:
    frontend:
        build: ./frontend
        working_dir: /app
        volumes:
            - ./frontend:/app
        expose:
            - '3000'
        command: sh -c "npm install && npm start"
        depends_on:
            - backend
        networks:
            - app-network

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        expose:
            - '5000'
        environment:
            MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${MONGO_DATABASE}
        depends_on:
            - mongo
        networks:
            - app-network

    mongo:
        image: mongo:latest
        volumes:
            - mongo-data:/data/db
        expose:
            - '27017'
        environment:
            MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        networks:
            - app-network

    modsecurity:
        image: owasp/modsecurity-crs:4.7.0-nginx-202410090410
        container_name: app-modsecurity
        depends_on:
            - reverse_proxy
        ports:
            - '80:8080'
            - '443:8443'
        environment:
            - BACKEND=http://reverse_proxy
            - PORT=8080
            - BACKEND_SSL=false
            - SSL=false
            - PROXY_SSL_VERIFY=off
            # ModSecurity specific settings
            - MODSEC_RULE_ENGINE=On
            - MODSEC_AUDIT_ENGINE=On
            - PARANOIA=1 # Paranoia level (1-4)
        networks:
            - app-network

    reverse_proxy:
        build: ./reverse_proxy
        expose:
            - '80'
        depends_on:
            - frontend
        networks:
            - app-network

volumes:
    mongo-data:

networks:
    app-network:
